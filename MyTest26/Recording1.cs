///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace MyTest26
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Recording1 recording.
    /// </summary>
    [TestModule("dfb1c579-cc05-476c-a00c-6801e0443334", ModuleType.Recording, 1)]
    public partial class Recording1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the MyTest26Repository repository.
        /// </summary>
        public static MyTest26Repository repo = MyTest26Repository.Instance;

        static Recording1 instance = new Recording1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Recording1()
        {
            varPulled = "null";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Recording1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _varPulled;

        /// <summary>
        /// Gets or sets the value of variable varPulled.
        /// </summary>
        [TestVariable("32cfea7a-2952-4d76-b3bb-1d1031396a19")]
        public string varPulled
        {
            get { return _varPulled; }
            set { _varPulled = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '44' on item 'RxMainFrame.RxTabStandard.Age'.", repo.RxMainFrame.RxTabStandard.AgeInfo, new RecordItemIndex(0));
            repo.RxMainFrame.RxTabStandard.Age.Element.SetAttributeValue("Text", "44");
            Delay.Milliseconds(0);
            
            // this is a password field
            Report.Log(ReportLevel.Info, "Set value", "this is a password field\r\nSetting attribute Text to '●●●' on item 'RxMainFrame.RxTabStandard.LastName'.", repo.RxMainFrame.RxTabStandard.LastNameInfo, new RecordItemIndex(1));
            repo.RxMainFrame.RxTabStandard.LastName.Element.SetAttributeValue("Text", "Doe");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to 'John' on item 'RxMainFrame.RxTabStandard.FirstName'.", repo.RxMainFrame.RxTabStandard.FirstNameInfo, new RecordItemIndex(2));
            repo.RxMainFrame.RxTabStandard.FirstName.Element.SetAttributeValue("Text", "John");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'RxMainFrame.RxTabStandard.FirstName' and assigning its value to variable 'varPulled'.", repo.RxMainFrame.RxTabStandard.FirstNameInfo, new RecordItemIndex(3));
            varPulled = repo.RxMainFrame.RxTabStandard.FirstName.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking Press() on item 'BtnAddPerson'.", repo.BtnAddPersonInfo, new RecordItemIndex(4));
            //repo.BtnAddPerson.Press();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", varPulled, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'RxMainFrame'.", repo.RxMainFrame.SelfInfo, new RecordItemIndex(6));
            Host.Current.CloseApplication(repo.RxMainFrame.Self, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
